#!/bin/bash

# Copyright 2019 Matthew Ling (sillygit@protonmail.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Automated benchmarking with mlucas for big.LITTLE architectures.
#
# Assumes environment is setup as follows:
# * mlucas binary located at ~/mlucas
# * Worker directories numbered from 0
# * Each worker directory needs an mlucas.cfg (ideally created when the other
#   workers are under load in an attempt to keep the tests on the cores we want,
#   these devices have a habit of ignoring core pinning requests)
# * Each worker directory needs a cpu file specifing the cores corresponding
#   to the cluster. The contents are given verbatim to mlucas's -cpu flag,
#   so for example '0,1,2,3' or '0:3' specifies the first four cores
# * ~/results directory not present, this directory is used to gather the
#   results and the script exits if it's already present to avoid mixing up
#   benchmark data
# * Temperature plotter at ~/c3tools/plotter
# * plotter requires 'sensors', probably acquired via 'lm-sensors'. If your
#   device does not have sensors installed, comment out the plotter references
#
# The setup script helps set up the environment in this manner

# Directory to store results
resdir="results"

# Test definitions
fft=(1024 2560 4608 7680 18432)
exponent=(20000047 49005071 87068977 143472073 332220523)
duration=(3600 7200 10800 14400 36000)
testcount=${#fft[@]}

# Create results dir, or early exit if it already exists
if [ -d ~/${resdir} ]; then
	echo "~/${resdir} directory already exists, exiting to avoid a mess"
	exit 1
else
	mkdir ~/${resdir}
fi

# Check environment is in order and define clustercount
clustercount=0
if [ ! -f ~/c3tools/plotter ]; then echo "~/c3tools/plotter missing, possible setup error" && exit 1; fi
while [ -d ~/$clustercount ]; do
	if [ ! -e ~/$clustercount/mlucas.cfg ]; then echo "~/$clustercount/mlucas.cfg missing, possible setup error" && exit 1; fi
	if [ ! -f ~/$clustercount/cpu ]; then echo "~/$clustercount/cpu missing, possible setup error" && exit 1; fi
done
clustercount=$clustercount+1

for (( j=0; j<${clustercount}; j++ )); do
	# Prep worktodo for benchmarking
	if [ -f ~/$j/worktodo.ini ]; then rm ~/$j/worktodo.ini; fi
	ln -s ~/worktodo.ini ~/$j/worktodo.ini

	# Gather mlucas.cfg into results
	cp ~/$j/mlucas.cfg ~/${resdir}/mlucas.$j.cfg

	# Gather cluster topology into results 
	cat ~/$j/cpu >>~/${resdir}/cluster.cfg
done

# Copy environment vitals into results
cat /proc/cpuinfo > ~/results/proc.cpuinfo
cat /proc/version > ~/results/proc.version

# Do tests
for (( i=0; i<${testcount}; i++ )); do

	# Edit worktodo
	echo "Test=${exponent[$i]}" >~/worktodo.ini

	# Start plotter
	~/c3tools/plotter "${resdir}/${fft[$i]}K.temps" &

	# Start clusters
	for (( j=0; j<${clustercount}; j++ )); do
		cd ~/$j && ~/mlucas -cpu $(cat ~/$j/cpu) &
		sleep 1
	done

	# Sleep for test duration
	sleep 3
	date
	echo "Executing FFT ${fft[$i]}K, exponent ${exponent[$i]}, duration ~${duration[$i]} seconds"
	sleep ${duration[$i]}

	# Kill test
	pkill mlucas
	pkill plotter

	for (( j=0; j<${clustercount}; j++ )); do
		# Gather results
		mv ~/$j/p${exponent[$i]}.stat ~/${resdir}/${fft[$i]}K.$j.stat
		# Cleanup residuals
		rm ~/$j/*${exponent[$i]}
	done

done

# Remove worktodo references
rm ~/worktodo.ini
for (( j=0; j<${clustercount}; j++ )); do
	rm ~/$j/worktodo.ini
done

tar --create -f ~/${resdir}.tar ~/${resdir}
echo "Benchmarking complete, consider uploading ~/${resdir}.tar to mersenneforum.org to share the results"
